When would you want to use a remote repository rather than keeping all your work
local?

    This would be useful if one wants to share code with other people.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Sometimes, we don't want every change made on a GitHub repo to be visible on our local repo,
    so we pull the ones we are interested in manually.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    forks -  when you want a version of someone else's repo so you can clone it and do wateva
    clones - this a a copy of my own repo
    branches - they are used for making feautures

What is the benefit of having a copy of the last known state of the remote
stored locally?
    If you want to go offline, you can update your local repo even if you aren't ready to merge
    the changes into your own branch. 
    

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    How would I collaborate without Git or Github, hmm. I guess i'll use gmail to send files of my code
    . Bitbucket maybe, but without Git i'll put Google to work by using. I could share files with
    Google drive also. 
    For very limited work, there would be simplicity. One would not need to get tutorials to learn
    Git and GitHub. Collaboration would be definitely harder, especially for huge projects. Also,
    reachability for developers would be more difficult without Github, we won't be able to reach 
    other coders and companies. It would also be harder to learn from other people's code without
    GitHub. Without Git there would no be GitHub, or GitHub would be too limited since its built on 
    Git.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
