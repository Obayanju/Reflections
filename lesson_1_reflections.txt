Q. How did viewing a diff between two versions of a file help you see the bug that was
introduced?
Ans. The line numbers really helped because it pin pointed where on the file changes were made.
Also, the -- and ++ were very intuitive as to figuring out what was being removed and added.

Q. How could having easy access to the entire history of a file make you a more efficient
programmer in the long term?
Ans. I would be a able to check in the future how my code looked like and how I could make it
better. I would be able to reflect upon my code design from the past to my code design in the
present to see how I have improved.

Q. What do you think are the pros and cons of manually choosing when to create a commit,
 like you do in Git, vs having versions automatically saved, like Google Docs does?
Ans. Pros - the ability to curate your commits to what you think is best.
    Cons - Failing miserably is judging how frequently you should commit

Q. Why do you think some version control systems, like Git, allow saving multiple files
 in one commit, while others, like Google Docs, treat each file separately?
Ans. Changes are better organized in a project when they saved together.

Q. How can you use the commands git log and git diff to view the history of files?
Ans. I can use git log to check the commit id, commit message, author name, and the date.
While I can use git diff to check the where a line of code was added and removed in a git commit

Q. How might using version control make you more confident to make changes that could break something?
Ans. I would be able to easily revert the code changes.

Q. Now that you have your workspace set up, what do you want to try using Git for?
Ans. github 
